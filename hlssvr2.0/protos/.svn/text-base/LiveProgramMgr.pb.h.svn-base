// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LiveProgramMgr.proto

#ifndef PROTOBUF_LiveProgramMgr_2eproto__INCLUDED
#define PROTOBUF_LiveProgramMgr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace liveprogrammgr_protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LiveProgramMgr_2eproto();
void protobuf_AssignDesc_LiveProgramMgr_2eproto();
void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

class ProgramInfo;
class SNotifyVideoStatus;
class GetProgramInfoReq;
class GetProgramInfoRsp;
class VideoIdItem;
class GetAllProgramVideoIdReq;
class GetAllProgramVideoIdRsp;
class VidInfoItem;
class VidInfoList;
class GetAllProgramVidInfoReq;
class GetAllProgramVideInfoRsp;
class DbProgramInfo;
class DbModuleInfo;
class AllDbProgramInfo;

enum CMD {
  CMD_LIVEPROGRAMMGR = 13312
};
bool CMD_IsValid(int value);
const CMD CMD_MIN = CMD_LIVEPROGRAMMGR;
const CMD CMD_MAX = CMD_LIVEPROGRAMMGR;
const int CMD_ARRAYSIZE = CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_descriptor();
inline const ::std::string& CMD_Name(CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_descriptor(), value);
}
inline bool CMD_Parse(
    const ::std::string& name, CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD>(
    CMD_descriptor(), name, value);
}
enum SUBCMD {
  SUBCMD_GET_PROGRAM = 1,
  SUBCMD_NOTIFY_VIDEOID_STATUS = 2,
  SUBCMD_GET_ALL_VIDEOID = 4,
  SUBCMD_GET_BIG_PROGRAM = 5,
  SUBCMD_GET_BIG_ALL_VIDEOID = 6,
  SUBCMD_GET_NEED_TRANSCODE_PROGRAM = 7,
  SUBCMD_GET_ALL_PROGRAM = 8,
  SUBCMD_GET_ALL_VIDINFO = 9
};
bool SUBCMD_IsValid(int value);
const SUBCMD SUBCMD_MIN = SUBCMD_GET_PROGRAM;
const SUBCMD SUBCMD_MAX = SUBCMD_GET_ALL_VIDINFO;
const int SUBCMD_ARRAYSIZE = SUBCMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* SUBCMD_descriptor();
inline const ::std::string& SUBCMD_Name(SUBCMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    SUBCMD_descriptor(), value);
}
inline bool SUBCMD_Parse(
    const ::std::string& name, SUBCMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SUBCMD>(
    SUBCMD_descriptor(), name, value);
}
enum VIDEO_STATUS {
  VIDEO_START = 1,
  VIDEO_STOP = 2,
  VIDEO_HEART_BEAT = 3
};
bool VIDEO_STATUS_IsValid(int value);
const VIDEO_STATUS VIDEO_STATUS_MIN = VIDEO_START;
const VIDEO_STATUS VIDEO_STATUS_MAX = VIDEO_HEART_BEAT;
const int VIDEO_STATUS_ARRAYSIZE = VIDEO_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* VIDEO_STATUS_descriptor();
inline const ::std::string& VIDEO_STATUS_Name(VIDEO_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    VIDEO_STATUS_descriptor(), value);
}
inline bool VIDEO_STATUS_Parse(
    const ::std::string& name, VIDEO_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VIDEO_STATUS>(
    VIDEO_STATUS_descriptor(), name, value);
}
enum RESULT_CODE {
  RESULT_SUCCESS = 0,
  RESULT_INVALID_TYPE = 1,
  RESULT_TYPE_NOT_FOUND = 2,
  RESULT_GET_LIST_FAILED = 3
};
bool RESULT_CODE_IsValid(int value);
const RESULT_CODE RESULT_CODE_MIN = RESULT_SUCCESS;
const RESULT_CODE RESULT_CODE_MAX = RESULT_GET_LIST_FAILED;
const int RESULT_CODE_ARRAYSIZE = RESULT_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_CODE_descriptor();
inline const ::std::string& RESULT_CODE_Name(RESULT_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_CODE_descriptor(), value);
}
inline bool RESULT_CODE_Parse(
    const ::std::string& name, RESULT_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_CODE>(
    RESULT_CODE_descriptor(), name, value);
}
enum STREAM_FORMAT {
  FORMAT_FLV = 1,
  FORMAT_TS = 2
};
bool STREAM_FORMAT_IsValid(int value);
const STREAM_FORMAT STREAM_FORMAT_MIN = FORMAT_FLV;
const STREAM_FORMAT STREAM_FORMAT_MAX = FORMAT_TS;
const int STREAM_FORMAT_ARRAYSIZE = STREAM_FORMAT_MAX + 1;

const ::google::protobuf::EnumDescriptor* STREAM_FORMAT_descriptor();
inline const ::std::string& STREAM_FORMAT_Name(STREAM_FORMAT value) {
  return ::google::protobuf::internal::NameOfEnum(
    STREAM_FORMAT_descriptor(), value);
}
inline bool STREAM_FORMAT_Parse(
    const ::std::string& name, STREAM_FORMAT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<STREAM_FORMAT>(
    STREAM_FORMAT_descriptor(), name, value);
}
// ===================================================================

class ProgramInfo : public ::google::protobuf::Message {
 public:
  ProgramInfo();
  virtual ~ProgramInfo();

  ProgramInfo(const ProgramInfo& from);

  inline ProgramInfo& operator=(const ProgramInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProgramInfo& default_instance();

  void Swap(ProgramInfo* other);

  // implements Message ----------------------------------------------

  ProgramInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProgramInfo& from);
  void MergeFrom(const ProgramInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiRoomId = 1;
  inline bool has_uiroomid() const;
  inline void clear_uiroomid();
  static const int kUiRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiroomid() const;
  inline void set_uiroomid(::google::protobuf::uint32 value);

  // required uint32 uiVideoId = 2;
  inline bool has_uivideoid() const;
  inline void clear_uivideoid();
  static const int kUiVideoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uivideoid() const;
  inline void set_uivideoid(::google::protobuf::uint32 value);

  // required uint32 uiMuxSvrIp = 3;
  inline bool has_uimuxsvrip() const;
  inline void clear_uimuxsvrip();
  static const int kUiMuxSvrIpFieldNumber = 3;
  inline ::google::protobuf::uint32 uimuxsvrip() const;
  inline void set_uimuxsvrip(::google::protobuf::uint32 value);

  // optional uint32 uiStreamFormat = 4;
  inline bool has_uistreamformat() const;
  inline void clear_uistreamformat();
  static const int kUiStreamFormatFieldNumber = 4;
  inline ::google::protobuf::uint32 uistreamformat() const;
  inline void set_uistreamformat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.ProgramInfo)
 private:
  inline void set_has_uiroomid();
  inline void clear_has_uiroomid();
  inline void set_has_uivideoid();
  inline void clear_has_uivideoid();
  inline void set_has_uimuxsvrip();
  inline void clear_has_uimuxsvrip();
  inline void set_has_uistreamformat();
  inline void clear_has_uistreamformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiroomid_;
  ::google::protobuf::uint32 uivideoid_;
  ::google::protobuf::uint32 uimuxsvrip_;
  ::google::protobuf::uint32 uistreamformat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static ProgramInfo* default_instance_;
};
// -------------------------------------------------------------------

class SNotifyVideoStatus : public ::google::protobuf::Message {
 public:
  SNotifyVideoStatus();
  virtual ~SNotifyVideoStatus();

  SNotifyVideoStatus(const SNotifyVideoStatus& from);

  inline SNotifyVideoStatus& operator=(const SNotifyVideoStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SNotifyVideoStatus& default_instance();

  void Swap(SNotifyVideoStatus* other);

  // implements Message ----------------------------------------------

  SNotifyVideoStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SNotifyVideoStatus& from);
  void MergeFrom(const SNotifyVideoStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiStatus = 1;
  inline bool has_uistatus() const;
  inline void clear_uistatus();
  static const int kUiStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 uistatus() const;
  inline void set_uistatus(::google::protobuf::uint32 value);

  // required uint64 uiUin = 2;
  inline bool has_uiuin() const;
  inline void clear_uiuin();
  static const int kUiUinFieldNumber = 2;
  inline ::google::protobuf::uint64 uiuin() const;
  inline void set_uiuin(::google::protobuf::uint64 value);

  // required uint32 uiRoomId = 3;
  inline bool has_uiroomid() const;
  inline void clear_uiroomid();
  static const int kUiRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 uiroomid() const;
  inline void set_uiroomid(::google::protobuf::uint32 value);

  // required uint32 uiMainRoomId = 4;
  inline bool has_uimainroomid() const;
  inline void clear_uimainroomid();
  static const int kUiMainRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 uimainroomid() const;
  inline void set_uimainroomid(::google::protobuf::uint32 value);

  // required uint32 uiRoomType = 5;
  inline bool has_uiroomtype() const;
  inline void clear_uiroomtype();
  static const int kUiRoomTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 uiroomtype() const;
  inline void set_uiroomtype(::google::protobuf::uint32 value);

  // required uint32 uiVideoId = 6;
  inline bool has_uivideoid() const;
  inline void clear_uivideoid();
  static const int kUiVideoIdFieldNumber = 6;
  inline ::google::protobuf::uint32 uivideoid() const;
  inline void set_uivideoid(::google::protobuf::uint32 value);

  // required uint32 uiSelfInternalIp = 7;
  inline bool has_uiselfinternalip() const;
  inline void clear_uiselfinternalip();
  static const int kUiSelfInternalIpFieldNumber = 7;
  inline ::google::protobuf::uint32 uiselfinternalip() const;
  inline void set_uiselfinternalip(::google::protobuf::uint32 value);

  // required uint32 uiSelfExternalIp = 8;
  inline bool has_uiselfexternalip() const;
  inline void clear_uiselfexternalip();
  static const int kUiSelfExternalIpFieldNumber = 8;
  inline ::google::protobuf::uint32 uiselfexternalip() const;
  inline void set_uiselfexternalip(::google::protobuf::uint32 value);

  // optional uint32 uiBitRate = 9;
  inline bool has_uibitrate() const;
  inline void clear_uibitrate();
  static const int kUiBitRateFieldNumber = 9;
  inline ::google::protobuf::uint32 uibitrate() const;
  inline void set_uibitrate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.SNotifyVideoStatus)
 private:
  inline void set_has_uistatus();
  inline void clear_has_uistatus();
  inline void set_has_uiuin();
  inline void clear_has_uiuin();
  inline void set_has_uiroomid();
  inline void clear_has_uiroomid();
  inline void set_has_uimainroomid();
  inline void clear_has_uimainroomid();
  inline void set_has_uiroomtype();
  inline void clear_has_uiroomtype();
  inline void set_has_uivideoid();
  inline void clear_has_uivideoid();
  inline void set_has_uiselfinternalip();
  inline void clear_has_uiselfinternalip();
  inline void set_has_uiselfexternalip();
  inline void clear_has_uiselfexternalip();
  inline void set_has_uibitrate();
  inline void clear_has_uibitrate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uiuin_;
  ::google::protobuf::uint32 uistatus_;
  ::google::protobuf::uint32 uiroomid_;
  ::google::protobuf::uint32 uimainroomid_;
  ::google::protobuf::uint32 uiroomtype_;
  ::google::protobuf::uint32 uivideoid_;
  ::google::protobuf::uint32 uiselfinternalip_;
  ::google::protobuf::uint32 uiselfexternalip_;
  ::google::protobuf::uint32 uibitrate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static SNotifyVideoStatus* default_instance_;
};
// -------------------------------------------------------------------

class GetProgramInfoReq : public ::google::protobuf::Message {
 public:
  GetProgramInfoReq();
  virtual ~GetProgramInfoReq();

  GetProgramInfoReq(const GetProgramInfoReq& from);

  inline GetProgramInfoReq& operator=(const GetProgramInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProgramInfoReq& default_instance();

  void Swap(GetProgramInfoReq* other);

  // implements Message ----------------------------------------------

  GetProgramInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetProgramInfoReq& from);
  void MergeFrom(const GetProgramInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.GetProgramInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static GetProgramInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetProgramInfoRsp : public ::google::protobuf::Message {
 public:
  GetProgramInfoRsp();
  virtual ~GetProgramInfoRsp();

  GetProgramInfoRsp(const GetProgramInfoRsp& from);

  inline GetProgramInfoRsp& operator=(const GetProgramInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProgramInfoRsp& default_instance();

  void Swap(GetProgramInfoRsp* other);

  // implements Message ----------------------------------------------

  GetProgramInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetProgramInfoRsp& from);
  void MergeFrom(const GetProgramInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated .liveprogrammgr_protos.ProgramInfo ProgramList = 2;
  inline int programlist_size() const;
  inline void clear_programlist();
  static const int kProgramListFieldNumber = 2;
  inline const ::liveprogrammgr_protos::ProgramInfo& programlist(int index) const;
  inline ::liveprogrammgr_protos::ProgramInfo* mutable_programlist(int index);
  inline ::liveprogrammgr_protos::ProgramInfo* add_programlist();
  inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::ProgramInfo >&
      programlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::ProgramInfo >*
      mutable_programlist();

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.GetProgramInfoRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::ProgramInfo > programlist_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static GetProgramInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class VideoIdItem : public ::google::protobuf::Message {
 public:
  VideoIdItem();
  virtual ~VideoIdItem();

  VideoIdItem(const VideoIdItem& from);

  inline VideoIdItem& operator=(const VideoIdItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoIdItem& default_instance();

  void Swap(VideoIdItem* other);

  // implements Message ----------------------------------------------

  VideoIdItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VideoIdItem& from);
  void MergeFrom(const VideoIdItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ProgramType = 1;
  inline bool has_programtype() const;
  inline void clear_programtype();
  static const int kProgramTypeFieldNumber = 1;
  inline const ::std::string& programtype() const;
  inline void set_programtype(const ::std::string& value);
  inline void set_programtype(const char* value);
  inline void set_programtype(const void* value, size_t size);
  inline ::std::string* mutable_programtype();
  inline ::std::string* release_programtype();
  inline void set_allocated_programtype(::std::string* programtype);

  // required uint32 uiVideoId = 2;
  inline bool has_uivideoid() const;
  inline void clear_uivideoid();
  static const int kUiVideoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uivideoid() const;
  inline void set_uivideoid(::google::protobuf::uint32 value);

  // optional uint32 uiAccessType = 3;
  inline bool has_uiaccesstype() const;
  inline void clear_uiaccesstype();
  static const int kUiAccessTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 uiaccesstype() const;
  inline void set_uiaccesstype(::google::protobuf::uint32 value);

  // optional uint32 uiCdnType = 4;
  inline bool has_uicdntype() const;
  inline void clear_uicdntype();
  static const int kUiCdnTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 uicdntype() const;
  inline void set_uicdntype(::google::protobuf::uint32 value);

  // optional uint32 uiMaxBandWidth = 5;
  inline bool has_uimaxbandwidth() const;
  inline void clear_uimaxbandwidth();
  static const int kUiMaxBandWidthFieldNumber = 5;
  inline ::google::protobuf::uint32 uimaxbandwidth() const;
  inline void set_uimaxbandwidth(::google::protobuf::uint32 value);

  // optional uint32 uiTotalBandWidth = 6;
  inline bool has_uitotalbandwidth() const;
  inline void clear_uitotalbandwidth();
  static const int kUiTotalBandWidthFieldNumber = 6;
  inline ::google::protobuf::uint32 uitotalbandwidth() const;
  inline void set_uitotalbandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.VideoIdItem)
 private:
  inline void set_has_programtype();
  inline void clear_has_programtype();
  inline void set_has_uivideoid();
  inline void clear_has_uivideoid();
  inline void set_has_uiaccesstype();
  inline void clear_has_uiaccesstype();
  inline void set_has_uicdntype();
  inline void clear_has_uicdntype();
  inline void set_has_uimaxbandwidth();
  inline void clear_has_uimaxbandwidth();
  inline void set_has_uitotalbandwidth();
  inline void clear_has_uitotalbandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* programtype_;
  ::google::protobuf::uint32 uivideoid_;
  ::google::protobuf::uint32 uiaccesstype_;
  ::google::protobuf::uint32 uicdntype_;
  ::google::protobuf::uint32 uimaxbandwidth_;
  ::google::protobuf::uint32 uitotalbandwidth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static VideoIdItem* default_instance_;
};
// -------------------------------------------------------------------

class GetAllProgramVideoIdReq : public ::google::protobuf::Message {
 public:
  GetAllProgramVideoIdReq();
  virtual ~GetAllProgramVideoIdReq();

  GetAllProgramVideoIdReq(const GetAllProgramVideoIdReq& from);

  inline GetAllProgramVideoIdReq& operator=(const GetAllProgramVideoIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllProgramVideoIdReq& default_instance();

  void Swap(GetAllProgramVideoIdReq* other);

  // implements Message ----------------------------------------------

  GetAllProgramVideoIdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllProgramVideoIdReq& from);
  void MergeFrom(const GetAllProgramVideoIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.GetAllProgramVideoIdReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static GetAllProgramVideoIdReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAllProgramVideoIdRsp : public ::google::protobuf::Message {
 public:
  GetAllProgramVideoIdRsp();
  virtual ~GetAllProgramVideoIdRsp();

  GetAllProgramVideoIdRsp(const GetAllProgramVideoIdRsp& from);

  inline GetAllProgramVideoIdRsp& operator=(const GetAllProgramVideoIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllProgramVideoIdRsp& default_instance();

  void Swap(GetAllProgramVideoIdRsp* other);

  // implements Message ----------------------------------------------

  GetAllProgramVideoIdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllProgramVideoIdRsp& from);
  void MergeFrom(const GetAllProgramVideoIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated .liveprogrammgr_protos.VideoIdItem VideoIdList = 2;
  inline int videoidlist_size() const;
  inline void clear_videoidlist();
  static const int kVideoIdListFieldNumber = 2;
  inline const ::liveprogrammgr_protos::VideoIdItem& videoidlist(int index) const;
  inline ::liveprogrammgr_protos::VideoIdItem* mutable_videoidlist(int index);
  inline ::liveprogrammgr_protos::VideoIdItem* add_videoidlist();
  inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VideoIdItem >&
      videoidlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VideoIdItem >*
      mutable_videoidlist();

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.GetAllProgramVideoIdRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VideoIdItem > videoidlist_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static GetAllProgramVideoIdRsp* default_instance_;
};
// -------------------------------------------------------------------

class VidInfoItem : public ::google::protobuf::Message {
 public:
  VidInfoItem();
  virtual ~VidInfoItem();

  VidInfoItem(const VidInfoItem& from);

  inline VidInfoItem& operator=(const VidInfoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VidInfoItem& default_instance();

  void Swap(VidInfoItem* other);

  // implements Message ----------------------------------------------

  VidInfoItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VidInfoItem& from);
  void MergeFrom(const VidInfoItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiVideoId = 1;
  inline bool has_uivideoid() const;
  inline void clear_uivideoid();
  static const int kUiVideoIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uivideoid() const;
  inline void set_uivideoid(::google::protobuf::uint32 value);

  // optional uint32 uiAccessType = 2;
  inline bool has_uiaccesstype() const;
  inline void clear_uiaccesstype();
  static const int kUiAccessTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uiaccesstype() const;
  inline void set_uiaccesstype(::google::protobuf::uint32 value);

  // optional uint32 uiCdnType = 3;
  inline bool has_uicdntype() const;
  inline void clear_uicdntype();
  static const int kUiCdnTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 uicdntype() const;
  inline void set_uicdntype(::google::protobuf::uint32 value);

  // optional uint32 uiMaxBandWidth = 4;
  inline bool has_uimaxbandwidth() const;
  inline void clear_uimaxbandwidth();
  static const int kUiMaxBandWidthFieldNumber = 4;
  inline ::google::protobuf::uint32 uimaxbandwidth() const;
  inline void set_uimaxbandwidth(::google::protobuf::uint32 value);

  // optional uint32 uiTotalBandWidth = 5;
  inline bool has_uitotalbandwidth() const;
  inline void clear_uitotalbandwidth();
  static const int kUiTotalBandWidthFieldNumber = 5;
  inline ::google::protobuf::uint32 uitotalbandwidth() const;
  inline void set_uitotalbandwidth(::google::protobuf::uint32 value);

  // optional uint32 uiBitRate = 6;
  inline bool has_uibitrate() const;
  inline void clear_uibitrate();
  static const int kUiBitRateFieldNumber = 6;
  inline ::google::protobuf::uint32 uibitrate() const;
  inline void set_uibitrate(::google::protobuf::uint32 value);

  // optional uint32 uiWidth = 7;
  inline bool has_uiwidth() const;
  inline void clear_uiwidth();
  static const int kUiWidthFieldNumber = 7;
  inline ::google::protobuf::uint32 uiwidth() const;
  inline void set_uiwidth(::google::protobuf::uint32 value);

  // optional uint32 uiHeight = 8;
  inline bool has_uiheight() const;
  inline void clear_uiheight();
  static const int kUiHeightFieldNumber = 8;
  inline ::google::protobuf::uint32 uiheight() const;
  inline void set_uiheight(::google::protobuf::uint32 value);

  // optional uint32 uiFps = 9;
  inline bool has_uifps() const;
  inline void clear_uifps();
  static const int kUiFpsFieldNumber = 9;
  inline ::google::protobuf::uint32 uifps() const;
  inline void set_uifps(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.VidInfoItem)
 private:
  inline void set_has_uivideoid();
  inline void clear_has_uivideoid();
  inline void set_has_uiaccesstype();
  inline void clear_has_uiaccesstype();
  inline void set_has_uicdntype();
  inline void clear_has_uicdntype();
  inline void set_has_uimaxbandwidth();
  inline void clear_has_uimaxbandwidth();
  inline void set_has_uitotalbandwidth();
  inline void clear_has_uitotalbandwidth();
  inline void set_has_uibitrate();
  inline void clear_has_uibitrate();
  inline void set_has_uiwidth();
  inline void clear_has_uiwidth();
  inline void set_has_uiheight();
  inline void clear_has_uiheight();
  inline void set_has_uifps();
  inline void clear_has_uifps();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uivideoid_;
  ::google::protobuf::uint32 uiaccesstype_;
  ::google::protobuf::uint32 uicdntype_;
  ::google::protobuf::uint32 uimaxbandwidth_;
  ::google::protobuf::uint32 uitotalbandwidth_;
  ::google::protobuf::uint32 uibitrate_;
  ::google::protobuf::uint32 uiwidth_;
  ::google::protobuf::uint32 uiheight_;
  ::google::protobuf::uint32 uifps_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static VidInfoItem* default_instance_;
};
// -------------------------------------------------------------------

class VidInfoList : public ::google::protobuf::Message {
 public:
  VidInfoList();
  virtual ~VidInfoList();

  VidInfoList(const VidInfoList& from);

  inline VidInfoList& operator=(const VidInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VidInfoList& default_instance();

  void Swap(VidInfoList* other);

  // implements Message ----------------------------------------------

  VidInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VidInfoList& from);
  void MergeFrom(const VidInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ProgramType = 1;
  inline bool has_programtype() const;
  inline void clear_programtype();
  static const int kProgramTypeFieldNumber = 1;
  inline const ::std::string& programtype() const;
  inline void set_programtype(const ::std::string& value);
  inline void set_programtype(const char* value);
  inline void set_programtype(const void* value, size_t size);
  inline ::std::string* mutable_programtype();
  inline ::std::string* release_programtype();
  inline void set_allocated_programtype(::std::string* programtype);

  // repeated .liveprogrammgr_protos.VidInfoItem VidInfo = 2;
  inline int vidinfo_size() const;
  inline void clear_vidinfo();
  static const int kVidInfoFieldNumber = 2;
  inline const ::liveprogrammgr_protos::VidInfoItem& vidinfo(int index) const;
  inline ::liveprogrammgr_protos::VidInfoItem* mutable_vidinfo(int index);
  inline ::liveprogrammgr_protos::VidInfoItem* add_vidinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoItem >&
      vidinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoItem >*
      mutable_vidinfo();

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.VidInfoList)
 private:
  inline void set_has_programtype();
  inline void clear_has_programtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* programtype_;
  ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoItem > vidinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static VidInfoList* default_instance_;
};
// -------------------------------------------------------------------

class GetAllProgramVidInfoReq : public ::google::protobuf::Message {
 public:
  GetAllProgramVidInfoReq();
  virtual ~GetAllProgramVidInfoReq();

  GetAllProgramVidInfoReq(const GetAllProgramVidInfoReq& from);

  inline GetAllProgramVidInfoReq& operator=(const GetAllProgramVidInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllProgramVidInfoReq& default_instance();

  void Swap(GetAllProgramVidInfoReq* other);

  // implements Message ----------------------------------------------

  GetAllProgramVidInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllProgramVidInfoReq& from);
  void MergeFrom(const GetAllProgramVidInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.GetAllProgramVidInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static GetAllProgramVidInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAllProgramVideInfoRsp : public ::google::protobuf::Message {
 public:
  GetAllProgramVideInfoRsp();
  virtual ~GetAllProgramVideInfoRsp();

  GetAllProgramVideInfoRsp(const GetAllProgramVideInfoRsp& from);

  inline GetAllProgramVideInfoRsp& operator=(const GetAllProgramVideInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllProgramVideInfoRsp& default_instance();

  void Swap(GetAllProgramVideInfoRsp* other);

  // implements Message ----------------------------------------------

  GetAllProgramVideInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllProgramVideInfoRsp& from);
  void MergeFrom(const GetAllProgramVideInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated .liveprogrammgr_protos.VidInfoList InfoList = 2;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 2;
  inline const ::liveprogrammgr_protos::VidInfoList& infolist(int index) const;
  inline ::liveprogrammgr_protos::VidInfoList* mutable_infolist(int index);
  inline ::liveprogrammgr_protos::VidInfoList* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoList >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoList >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.GetAllProgramVideInfoRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoList > infolist_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static GetAllProgramVideInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class DbProgramInfo : public ::google::protobuf::Message {
 public:
  DbProgramInfo();
  virtual ~DbProgramInfo();

  DbProgramInfo(const DbProgramInfo& from);

  inline DbProgramInfo& operator=(const DbProgramInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbProgramInfo& default_instance();

  void Swap(DbProgramInfo* other);

  // implements Message ----------------------------------------------

  DbProgramInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbProgramInfo& from);
  void MergeFrom(const DbProgramInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiVideoId = 1;
  inline bool has_uivideoid() const;
  inline void clear_uivideoid();
  static const int kUiVideoIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uivideoid() const;
  inline void set_uivideoid(::google::protobuf::uint32 value);

  // required uint32 uiRoomId = 2;
  inline bool has_uiroomid() const;
  inline void clear_uiroomid();
  static const int kUiRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uiroomid() const;
  inline void set_uiroomid(::google::protobuf::uint32 value);

  // required uint32 uiMuxSvrIp = 3;
  inline bool has_uimuxsvrip() const;
  inline void clear_uimuxsvrip();
  static const int kUiMuxSvrIpFieldNumber = 3;
  inline ::google::protobuf::uint32 uimuxsvrip() const;
  inline void set_uimuxsvrip(::google::protobuf::uint32 value);

  // required uint32 uiStreamFormat = 4;
  inline bool has_uistreamformat() const;
  inline void clear_uistreamformat();
  static const int kUiStreamFormatFieldNumber = 4;
  inline ::google::protobuf::uint32 uistreamformat() const;
  inline void set_uistreamformat(::google::protobuf::uint32 value);

  // optional uint32 uiBackFrameCnt = 5;
  inline bool has_uibackframecnt() const;
  inline void clear_uibackframecnt();
  static const int kUiBackFrameCntFieldNumber = 5;
  inline ::google::protobuf::uint32 uibackframecnt() const;
  inline void set_uibackframecnt(::google::protobuf::uint32 value);

  // optional uint32 uiBufferFrameCount = 6;
  inline bool has_uibufferframecount() const;
  inline void clear_uibufferframecount();
  static const int kUiBufferFrameCountFieldNumber = 6;
  inline ::google::protobuf::uint32 uibufferframecount() const;
  inline void set_uibufferframecount(::google::protobuf::uint32 value);

  // optional uint32 uiP2PBackTime = 7;
  inline bool has_uip2pbacktime() const;
  inline void clear_uip2pbacktime();
  static const int kUiP2PBackTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 uip2pbacktime() const;
  inline void set_uip2pbacktime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.DbProgramInfo)
 private:
  inline void set_has_uivideoid();
  inline void clear_has_uivideoid();
  inline void set_has_uiroomid();
  inline void clear_has_uiroomid();
  inline void set_has_uimuxsvrip();
  inline void clear_has_uimuxsvrip();
  inline void set_has_uistreamformat();
  inline void clear_has_uistreamformat();
  inline void set_has_uibackframecnt();
  inline void clear_has_uibackframecnt();
  inline void set_has_uibufferframecount();
  inline void clear_has_uibufferframecount();
  inline void set_has_uip2pbacktime();
  inline void clear_has_uip2pbacktime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uivideoid_;
  ::google::protobuf::uint32 uiroomid_;
  ::google::protobuf::uint32 uimuxsvrip_;
  ::google::protobuf::uint32 uistreamformat_;
  ::google::protobuf::uint32 uibackframecnt_;
  ::google::protobuf::uint32 uibufferframecount_;
  ::google::protobuf::uint32 uip2pbacktime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static DbProgramInfo* default_instance_;
};
// -------------------------------------------------------------------

class DbModuleInfo : public ::google::protobuf::Message {
 public:
  DbModuleInfo();
  virtual ~DbModuleInfo();

  DbModuleInfo(const DbModuleInfo& from);

  inline DbModuleInfo& operator=(const DbModuleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbModuleInfo& default_instance();

  void Swap(DbModuleInfo* other);

  // implements Message ----------------------------------------------

  DbModuleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbModuleInfo& from);
  void MergeFrom(const DbModuleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes strModule = 1;
  inline bool has_strmodule() const;
  inline void clear_strmodule();
  static const int kStrModuleFieldNumber = 1;
  inline const ::std::string& strmodule() const;
  inline void set_strmodule(const ::std::string& value);
  inline void set_strmodule(const char* value);
  inline void set_strmodule(const void* value, size_t size);
  inline ::std::string* mutable_strmodule();
  inline ::std::string* release_strmodule();
  inline void set_allocated_strmodule(::std::string* strmodule);

  // required uint32 uiVideoId = 2;
  inline bool has_uivideoid() const;
  inline void clear_uivideoid();
  static const int kUiVideoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uivideoid() const;
  inline void set_uivideoid(::google::protobuf::uint32 value);

  // required uint32 uiAccessType = 3;
  inline bool has_uiaccesstype() const;
  inline void clear_uiaccesstype();
  static const int kUiAccessTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 uiaccesstype() const;
  inline void set_uiaccesstype(::google::protobuf::uint32 value);

  // optional uint32 uiCdnType = 4;
  inline bool has_uicdntype() const;
  inline void clear_uicdntype();
  static const int kUiCdnTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 uicdntype() const;
  inline void set_uicdntype(::google::protobuf::uint32 value);

  // optional uint32 uiMaxBandWidth = 5;
  inline bool has_uimaxbandwidth() const;
  inline void clear_uimaxbandwidth();
  static const int kUiMaxBandWidthFieldNumber = 5;
  inline ::google::protobuf::uint32 uimaxbandwidth() const;
  inline void set_uimaxbandwidth(::google::protobuf::uint32 value);

  // optional uint32 uiTotalBandWidth = 6;
  inline bool has_uitotalbandwidth() const;
  inline void clear_uitotalbandwidth();
  static const int kUiTotalBandWidthFieldNumber = 6;
  inline ::google::protobuf::uint32 uitotalbandwidth() const;
  inline void set_uitotalbandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.DbModuleInfo)
 private:
  inline void set_has_strmodule();
  inline void clear_has_strmodule();
  inline void set_has_uivideoid();
  inline void clear_has_uivideoid();
  inline void set_has_uiaccesstype();
  inline void clear_has_uiaccesstype();
  inline void set_has_uicdntype();
  inline void clear_has_uicdntype();
  inline void set_has_uimaxbandwidth();
  inline void clear_has_uimaxbandwidth();
  inline void set_has_uitotalbandwidth();
  inline void clear_has_uitotalbandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmodule_;
  ::google::protobuf::uint32 uivideoid_;
  ::google::protobuf::uint32 uiaccesstype_;
  ::google::protobuf::uint32 uicdntype_;
  ::google::protobuf::uint32 uimaxbandwidth_;
  ::google::protobuf::uint32 uitotalbandwidth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static DbModuleInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllDbProgramInfo : public ::google::protobuf::Message {
 public:
  AllDbProgramInfo();
  virtual ~AllDbProgramInfo();

  AllDbProgramInfo(const AllDbProgramInfo& from);

  inline AllDbProgramInfo& operator=(const AllDbProgramInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllDbProgramInfo& default_instance();

  void Swap(AllDbProgramInfo* other);

  // implements Message ----------------------------------------------

  AllDbProgramInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllDbProgramInfo& from);
  void MergeFrom(const AllDbProgramInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes strUpdateTime = 1;
  inline bool has_strupdatetime() const;
  inline void clear_strupdatetime();
  static const int kStrUpdateTimeFieldNumber = 1;
  inline const ::std::string& strupdatetime() const;
  inline void set_strupdatetime(const ::std::string& value);
  inline void set_strupdatetime(const char* value);
  inline void set_strupdatetime(const void* value, size_t size);
  inline ::std::string* mutable_strupdatetime();
  inline ::std::string* release_strupdatetime();
  inline void set_allocated_strupdatetime(::std::string* strupdatetime);

  // repeated .liveprogrammgr_protos.DbProgramInfo dbProgramInfoList = 2;
  inline int dbprograminfolist_size() const;
  inline void clear_dbprograminfolist();
  static const int kDbProgramInfoListFieldNumber = 2;
  inline const ::liveprogrammgr_protos::DbProgramInfo& dbprograminfolist(int index) const;
  inline ::liveprogrammgr_protos::DbProgramInfo* mutable_dbprograminfolist(int index);
  inline ::liveprogrammgr_protos::DbProgramInfo* add_dbprograminfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbProgramInfo >&
      dbprograminfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbProgramInfo >*
      mutable_dbprograminfolist();

  // repeated .liveprogrammgr_protos.DbModuleInfo dbModuleInfoList = 3;
  inline int dbmoduleinfolist_size() const;
  inline void clear_dbmoduleinfolist();
  static const int kDbModuleInfoListFieldNumber = 3;
  inline const ::liveprogrammgr_protos::DbModuleInfo& dbmoduleinfolist(int index) const;
  inline ::liveprogrammgr_protos::DbModuleInfo* mutable_dbmoduleinfolist(int index);
  inline ::liveprogrammgr_protos::DbModuleInfo* add_dbmoduleinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbModuleInfo >&
      dbmoduleinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbModuleInfo >*
      mutable_dbmoduleinfolist();

  // @@protoc_insertion_point(class_scope:liveprogrammgr_protos.AllDbProgramInfo)
 private:
  inline void set_has_strupdatetime();
  inline void clear_has_strupdatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strupdatetime_;
  ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbProgramInfo > dbprograminfolist_;
  ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbModuleInfo > dbmoduleinfolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_LiveProgramMgr_2eproto();
  friend void protobuf_AssignDesc_LiveProgramMgr_2eproto();
  friend void protobuf_ShutdownFile_LiveProgramMgr_2eproto();

  void InitAsDefaultInstance();
  static AllDbProgramInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ProgramInfo

// required uint32 uiRoomId = 1;
inline bool ProgramInfo::has_uiroomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProgramInfo::set_has_uiroomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProgramInfo::clear_has_uiroomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProgramInfo::clear_uiroomid() {
  uiroomid_ = 0u;
  clear_has_uiroomid();
}
inline ::google::protobuf::uint32 ProgramInfo::uiroomid() const {
  return uiroomid_;
}
inline void ProgramInfo::set_uiroomid(::google::protobuf::uint32 value) {
  set_has_uiroomid();
  uiroomid_ = value;
}

// required uint32 uiVideoId = 2;
inline bool ProgramInfo::has_uivideoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProgramInfo::set_has_uivideoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProgramInfo::clear_has_uivideoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProgramInfo::clear_uivideoid() {
  uivideoid_ = 0u;
  clear_has_uivideoid();
}
inline ::google::protobuf::uint32 ProgramInfo::uivideoid() const {
  return uivideoid_;
}
inline void ProgramInfo::set_uivideoid(::google::protobuf::uint32 value) {
  set_has_uivideoid();
  uivideoid_ = value;
}

// required uint32 uiMuxSvrIp = 3;
inline bool ProgramInfo::has_uimuxsvrip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProgramInfo::set_has_uimuxsvrip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProgramInfo::clear_has_uimuxsvrip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProgramInfo::clear_uimuxsvrip() {
  uimuxsvrip_ = 0u;
  clear_has_uimuxsvrip();
}
inline ::google::protobuf::uint32 ProgramInfo::uimuxsvrip() const {
  return uimuxsvrip_;
}
inline void ProgramInfo::set_uimuxsvrip(::google::protobuf::uint32 value) {
  set_has_uimuxsvrip();
  uimuxsvrip_ = value;
}

// optional uint32 uiStreamFormat = 4;
inline bool ProgramInfo::has_uistreamformat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProgramInfo::set_has_uistreamformat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProgramInfo::clear_has_uistreamformat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProgramInfo::clear_uistreamformat() {
  uistreamformat_ = 0u;
  clear_has_uistreamformat();
}
inline ::google::protobuf::uint32 ProgramInfo::uistreamformat() const {
  return uistreamformat_;
}
inline void ProgramInfo::set_uistreamformat(::google::protobuf::uint32 value) {
  set_has_uistreamformat();
  uistreamformat_ = value;
}

// -------------------------------------------------------------------

// SNotifyVideoStatus

// required uint32 uiStatus = 1;
inline bool SNotifyVideoStatus::has_uistatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SNotifyVideoStatus::set_has_uistatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SNotifyVideoStatus::clear_has_uistatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SNotifyVideoStatus::clear_uistatus() {
  uistatus_ = 0u;
  clear_has_uistatus();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uistatus() const {
  return uistatus_;
}
inline void SNotifyVideoStatus::set_uistatus(::google::protobuf::uint32 value) {
  set_has_uistatus();
  uistatus_ = value;
}

// required uint64 uiUin = 2;
inline bool SNotifyVideoStatus::has_uiuin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SNotifyVideoStatus::set_has_uiuin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SNotifyVideoStatus::clear_has_uiuin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SNotifyVideoStatus::clear_uiuin() {
  uiuin_ = GOOGLE_ULONGLONG(0);
  clear_has_uiuin();
}
inline ::google::protobuf::uint64 SNotifyVideoStatus::uiuin() const {
  return uiuin_;
}
inline void SNotifyVideoStatus::set_uiuin(::google::protobuf::uint64 value) {
  set_has_uiuin();
  uiuin_ = value;
}

// required uint32 uiRoomId = 3;
inline bool SNotifyVideoStatus::has_uiroomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SNotifyVideoStatus::set_has_uiroomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SNotifyVideoStatus::clear_has_uiroomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SNotifyVideoStatus::clear_uiroomid() {
  uiroomid_ = 0u;
  clear_has_uiroomid();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uiroomid() const {
  return uiroomid_;
}
inline void SNotifyVideoStatus::set_uiroomid(::google::protobuf::uint32 value) {
  set_has_uiroomid();
  uiroomid_ = value;
}

// required uint32 uiMainRoomId = 4;
inline bool SNotifyVideoStatus::has_uimainroomid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SNotifyVideoStatus::set_has_uimainroomid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SNotifyVideoStatus::clear_has_uimainroomid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SNotifyVideoStatus::clear_uimainroomid() {
  uimainroomid_ = 0u;
  clear_has_uimainroomid();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uimainroomid() const {
  return uimainroomid_;
}
inline void SNotifyVideoStatus::set_uimainroomid(::google::protobuf::uint32 value) {
  set_has_uimainroomid();
  uimainroomid_ = value;
}

// required uint32 uiRoomType = 5;
inline bool SNotifyVideoStatus::has_uiroomtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SNotifyVideoStatus::set_has_uiroomtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SNotifyVideoStatus::clear_has_uiroomtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SNotifyVideoStatus::clear_uiroomtype() {
  uiroomtype_ = 0u;
  clear_has_uiroomtype();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uiroomtype() const {
  return uiroomtype_;
}
inline void SNotifyVideoStatus::set_uiroomtype(::google::protobuf::uint32 value) {
  set_has_uiroomtype();
  uiroomtype_ = value;
}

// required uint32 uiVideoId = 6;
inline bool SNotifyVideoStatus::has_uivideoid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SNotifyVideoStatus::set_has_uivideoid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SNotifyVideoStatus::clear_has_uivideoid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SNotifyVideoStatus::clear_uivideoid() {
  uivideoid_ = 0u;
  clear_has_uivideoid();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uivideoid() const {
  return uivideoid_;
}
inline void SNotifyVideoStatus::set_uivideoid(::google::protobuf::uint32 value) {
  set_has_uivideoid();
  uivideoid_ = value;
}

// required uint32 uiSelfInternalIp = 7;
inline bool SNotifyVideoStatus::has_uiselfinternalip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SNotifyVideoStatus::set_has_uiselfinternalip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SNotifyVideoStatus::clear_has_uiselfinternalip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SNotifyVideoStatus::clear_uiselfinternalip() {
  uiselfinternalip_ = 0u;
  clear_has_uiselfinternalip();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uiselfinternalip() const {
  return uiselfinternalip_;
}
inline void SNotifyVideoStatus::set_uiselfinternalip(::google::protobuf::uint32 value) {
  set_has_uiselfinternalip();
  uiselfinternalip_ = value;
}

// required uint32 uiSelfExternalIp = 8;
inline bool SNotifyVideoStatus::has_uiselfexternalip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SNotifyVideoStatus::set_has_uiselfexternalip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SNotifyVideoStatus::clear_has_uiselfexternalip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SNotifyVideoStatus::clear_uiselfexternalip() {
  uiselfexternalip_ = 0u;
  clear_has_uiselfexternalip();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uiselfexternalip() const {
  return uiselfexternalip_;
}
inline void SNotifyVideoStatus::set_uiselfexternalip(::google::protobuf::uint32 value) {
  set_has_uiselfexternalip();
  uiselfexternalip_ = value;
}

// optional uint32 uiBitRate = 9;
inline bool SNotifyVideoStatus::has_uibitrate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SNotifyVideoStatus::set_has_uibitrate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SNotifyVideoStatus::clear_has_uibitrate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SNotifyVideoStatus::clear_uibitrate() {
  uibitrate_ = 0u;
  clear_has_uibitrate();
}
inline ::google::protobuf::uint32 SNotifyVideoStatus::uibitrate() const {
  return uibitrate_;
}
inline void SNotifyVideoStatus::set_uibitrate(::google::protobuf::uint32 value) {
  set_has_uibitrate();
  uibitrate_ = value;
}

// -------------------------------------------------------------------

// GetProgramInfoReq

// -------------------------------------------------------------------

// GetProgramInfoRsp

// required uint32 Result = 1;
inline bool GetProgramInfoRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProgramInfoRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProgramInfoRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProgramInfoRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GetProgramInfoRsp::result() const {
  return result_;
}
inline void GetProgramInfoRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .liveprogrammgr_protos.ProgramInfo ProgramList = 2;
inline int GetProgramInfoRsp::programlist_size() const {
  return programlist_.size();
}
inline void GetProgramInfoRsp::clear_programlist() {
  programlist_.Clear();
}
inline const ::liveprogrammgr_protos::ProgramInfo& GetProgramInfoRsp::programlist(int index) const {
  return programlist_.Get(index);
}
inline ::liveprogrammgr_protos::ProgramInfo* GetProgramInfoRsp::mutable_programlist(int index) {
  return programlist_.Mutable(index);
}
inline ::liveprogrammgr_protos::ProgramInfo* GetProgramInfoRsp::add_programlist() {
  return programlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::ProgramInfo >&
GetProgramInfoRsp::programlist() const {
  return programlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::ProgramInfo >*
GetProgramInfoRsp::mutable_programlist() {
  return &programlist_;
}

// -------------------------------------------------------------------

// VideoIdItem

// required bytes ProgramType = 1;
inline bool VideoIdItem::has_programtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VideoIdItem::set_has_programtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VideoIdItem::clear_has_programtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VideoIdItem::clear_programtype() {
  if (programtype_ != &::google::protobuf::internal::kEmptyString) {
    programtype_->clear();
  }
  clear_has_programtype();
}
inline const ::std::string& VideoIdItem::programtype() const {
  return *programtype_;
}
inline void VideoIdItem::set_programtype(const ::std::string& value) {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  programtype_->assign(value);
}
inline void VideoIdItem::set_programtype(const char* value) {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  programtype_->assign(value);
}
inline void VideoIdItem::set_programtype(const void* value, size_t size) {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  programtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* VideoIdItem::mutable_programtype() {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  return programtype_;
}
inline ::std::string* VideoIdItem::release_programtype() {
  clear_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = programtype_;
    programtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void VideoIdItem::set_allocated_programtype(::std::string* programtype) {
  if (programtype_ != &::google::protobuf::internal::kEmptyString) {
    delete programtype_;
  }
  if (programtype) {
    set_has_programtype();
    programtype_ = programtype;
  } else {
    clear_has_programtype();
    programtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uiVideoId = 2;
inline bool VideoIdItem::has_uivideoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VideoIdItem::set_has_uivideoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VideoIdItem::clear_has_uivideoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VideoIdItem::clear_uivideoid() {
  uivideoid_ = 0u;
  clear_has_uivideoid();
}
inline ::google::protobuf::uint32 VideoIdItem::uivideoid() const {
  return uivideoid_;
}
inline void VideoIdItem::set_uivideoid(::google::protobuf::uint32 value) {
  set_has_uivideoid();
  uivideoid_ = value;
}

// optional uint32 uiAccessType = 3;
inline bool VideoIdItem::has_uiaccesstype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VideoIdItem::set_has_uiaccesstype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VideoIdItem::clear_has_uiaccesstype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VideoIdItem::clear_uiaccesstype() {
  uiaccesstype_ = 0u;
  clear_has_uiaccesstype();
}
inline ::google::protobuf::uint32 VideoIdItem::uiaccesstype() const {
  return uiaccesstype_;
}
inline void VideoIdItem::set_uiaccesstype(::google::protobuf::uint32 value) {
  set_has_uiaccesstype();
  uiaccesstype_ = value;
}

// optional uint32 uiCdnType = 4;
inline bool VideoIdItem::has_uicdntype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VideoIdItem::set_has_uicdntype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VideoIdItem::clear_has_uicdntype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VideoIdItem::clear_uicdntype() {
  uicdntype_ = 0u;
  clear_has_uicdntype();
}
inline ::google::protobuf::uint32 VideoIdItem::uicdntype() const {
  return uicdntype_;
}
inline void VideoIdItem::set_uicdntype(::google::protobuf::uint32 value) {
  set_has_uicdntype();
  uicdntype_ = value;
}

// optional uint32 uiMaxBandWidth = 5;
inline bool VideoIdItem::has_uimaxbandwidth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VideoIdItem::set_has_uimaxbandwidth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VideoIdItem::clear_has_uimaxbandwidth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VideoIdItem::clear_uimaxbandwidth() {
  uimaxbandwidth_ = 0u;
  clear_has_uimaxbandwidth();
}
inline ::google::protobuf::uint32 VideoIdItem::uimaxbandwidth() const {
  return uimaxbandwidth_;
}
inline void VideoIdItem::set_uimaxbandwidth(::google::protobuf::uint32 value) {
  set_has_uimaxbandwidth();
  uimaxbandwidth_ = value;
}

// optional uint32 uiTotalBandWidth = 6;
inline bool VideoIdItem::has_uitotalbandwidth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VideoIdItem::set_has_uitotalbandwidth() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VideoIdItem::clear_has_uitotalbandwidth() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VideoIdItem::clear_uitotalbandwidth() {
  uitotalbandwidth_ = 0u;
  clear_has_uitotalbandwidth();
}
inline ::google::protobuf::uint32 VideoIdItem::uitotalbandwidth() const {
  return uitotalbandwidth_;
}
inline void VideoIdItem::set_uitotalbandwidth(::google::protobuf::uint32 value) {
  set_has_uitotalbandwidth();
  uitotalbandwidth_ = value;
}

// -------------------------------------------------------------------

// GetAllProgramVideoIdReq

// -------------------------------------------------------------------

// GetAllProgramVideoIdRsp

// required uint32 Result = 1;
inline bool GetAllProgramVideoIdRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAllProgramVideoIdRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAllProgramVideoIdRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAllProgramVideoIdRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GetAllProgramVideoIdRsp::result() const {
  return result_;
}
inline void GetAllProgramVideoIdRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .liveprogrammgr_protos.VideoIdItem VideoIdList = 2;
inline int GetAllProgramVideoIdRsp::videoidlist_size() const {
  return videoidlist_.size();
}
inline void GetAllProgramVideoIdRsp::clear_videoidlist() {
  videoidlist_.Clear();
}
inline const ::liveprogrammgr_protos::VideoIdItem& GetAllProgramVideoIdRsp::videoidlist(int index) const {
  return videoidlist_.Get(index);
}
inline ::liveprogrammgr_protos::VideoIdItem* GetAllProgramVideoIdRsp::mutable_videoidlist(int index) {
  return videoidlist_.Mutable(index);
}
inline ::liveprogrammgr_protos::VideoIdItem* GetAllProgramVideoIdRsp::add_videoidlist() {
  return videoidlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VideoIdItem >&
GetAllProgramVideoIdRsp::videoidlist() const {
  return videoidlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VideoIdItem >*
GetAllProgramVideoIdRsp::mutable_videoidlist() {
  return &videoidlist_;
}

// -------------------------------------------------------------------

// VidInfoItem

// required uint32 uiVideoId = 1;
inline bool VidInfoItem::has_uivideoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VidInfoItem::set_has_uivideoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VidInfoItem::clear_has_uivideoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VidInfoItem::clear_uivideoid() {
  uivideoid_ = 0u;
  clear_has_uivideoid();
}
inline ::google::protobuf::uint32 VidInfoItem::uivideoid() const {
  return uivideoid_;
}
inline void VidInfoItem::set_uivideoid(::google::protobuf::uint32 value) {
  set_has_uivideoid();
  uivideoid_ = value;
}

// optional uint32 uiAccessType = 2;
inline bool VidInfoItem::has_uiaccesstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VidInfoItem::set_has_uiaccesstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VidInfoItem::clear_has_uiaccesstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VidInfoItem::clear_uiaccesstype() {
  uiaccesstype_ = 0u;
  clear_has_uiaccesstype();
}
inline ::google::protobuf::uint32 VidInfoItem::uiaccesstype() const {
  return uiaccesstype_;
}
inline void VidInfoItem::set_uiaccesstype(::google::protobuf::uint32 value) {
  set_has_uiaccesstype();
  uiaccesstype_ = value;
}

// optional uint32 uiCdnType = 3;
inline bool VidInfoItem::has_uicdntype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VidInfoItem::set_has_uicdntype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VidInfoItem::clear_has_uicdntype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VidInfoItem::clear_uicdntype() {
  uicdntype_ = 0u;
  clear_has_uicdntype();
}
inline ::google::protobuf::uint32 VidInfoItem::uicdntype() const {
  return uicdntype_;
}
inline void VidInfoItem::set_uicdntype(::google::protobuf::uint32 value) {
  set_has_uicdntype();
  uicdntype_ = value;
}

// optional uint32 uiMaxBandWidth = 4;
inline bool VidInfoItem::has_uimaxbandwidth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VidInfoItem::set_has_uimaxbandwidth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VidInfoItem::clear_has_uimaxbandwidth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VidInfoItem::clear_uimaxbandwidth() {
  uimaxbandwidth_ = 0u;
  clear_has_uimaxbandwidth();
}
inline ::google::protobuf::uint32 VidInfoItem::uimaxbandwidth() const {
  return uimaxbandwidth_;
}
inline void VidInfoItem::set_uimaxbandwidth(::google::protobuf::uint32 value) {
  set_has_uimaxbandwidth();
  uimaxbandwidth_ = value;
}

// optional uint32 uiTotalBandWidth = 5;
inline bool VidInfoItem::has_uitotalbandwidth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VidInfoItem::set_has_uitotalbandwidth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VidInfoItem::clear_has_uitotalbandwidth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VidInfoItem::clear_uitotalbandwidth() {
  uitotalbandwidth_ = 0u;
  clear_has_uitotalbandwidth();
}
inline ::google::protobuf::uint32 VidInfoItem::uitotalbandwidth() const {
  return uitotalbandwidth_;
}
inline void VidInfoItem::set_uitotalbandwidth(::google::protobuf::uint32 value) {
  set_has_uitotalbandwidth();
  uitotalbandwidth_ = value;
}

// optional uint32 uiBitRate = 6;
inline bool VidInfoItem::has_uibitrate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VidInfoItem::set_has_uibitrate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VidInfoItem::clear_has_uibitrate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VidInfoItem::clear_uibitrate() {
  uibitrate_ = 0u;
  clear_has_uibitrate();
}
inline ::google::protobuf::uint32 VidInfoItem::uibitrate() const {
  return uibitrate_;
}
inline void VidInfoItem::set_uibitrate(::google::protobuf::uint32 value) {
  set_has_uibitrate();
  uibitrate_ = value;
}

// optional uint32 uiWidth = 7;
inline bool VidInfoItem::has_uiwidth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VidInfoItem::set_has_uiwidth() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VidInfoItem::clear_has_uiwidth() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VidInfoItem::clear_uiwidth() {
  uiwidth_ = 0u;
  clear_has_uiwidth();
}
inline ::google::protobuf::uint32 VidInfoItem::uiwidth() const {
  return uiwidth_;
}
inline void VidInfoItem::set_uiwidth(::google::protobuf::uint32 value) {
  set_has_uiwidth();
  uiwidth_ = value;
}

// optional uint32 uiHeight = 8;
inline bool VidInfoItem::has_uiheight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VidInfoItem::set_has_uiheight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VidInfoItem::clear_has_uiheight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VidInfoItem::clear_uiheight() {
  uiheight_ = 0u;
  clear_has_uiheight();
}
inline ::google::protobuf::uint32 VidInfoItem::uiheight() const {
  return uiheight_;
}
inline void VidInfoItem::set_uiheight(::google::protobuf::uint32 value) {
  set_has_uiheight();
  uiheight_ = value;
}

// optional uint32 uiFps = 9;
inline bool VidInfoItem::has_uifps() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VidInfoItem::set_has_uifps() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VidInfoItem::clear_has_uifps() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VidInfoItem::clear_uifps() {
  uifps_ = 0u;
  clear_has_uifps();
}
inline ::google::protobuf::uint32 VidInfoItem::uifps() const {
  return uifps_;
}
inline void VidInfoItem::set_uifps(::google::protobuf::uint32 value) {
  set_has_uifps();
  uifps_ = value;
}

// -------------------------------------------------------------------

// VidInfoList

// required bytes ProgramType = 1;
inline bool VidInfoList::has_programtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VidInfoList::set_has_programtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VidInfoList::clear_has_programtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VidInfoList::clear_programtype() {
  if (programtype_ != &::google::protobuf::internal::kEmptyString) {
    programtype_->clear();
  }
  clear_has_programtype();
}
inline const ::std::string& VidInfoList::programtype() const {
  return *programtype_;
}
inline void VidInfoList::set_programtype(const ::std::string& value) {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  programtype_->assign(value);
}
inline void VidInfoList::set_programtype(const char* value) {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  programtype_->assign(value);
}
inline void VidInfoList::set_programtype(const void* value, size_t size) {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  programtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* VidInfoList::mutable_programtype() {
  set_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    programtype_ = new ::std::string;
  }
  return programtype_;
}
inline ::std::string* VidInfoList::release_programtype() {
  clear_has_programtype();
  if (programtype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = programtype_;
    programtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void VidInfoList::set_allocated_programtype(::std::string* programtype) {
  if (programtype_ != &::google::protobuf::internal::kEmptyString) {
    delete programtype_;
  }
  if (programtype) {
    set_has_programtype();
    programtype_ = programtype;
  } else {
    clear_has_programtype();
    programtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .liveprogrammgr_protos.VidInfoItem VidInfo = 2;
inline int VidInfoList::vidinfo_size() const {
  return vidinfo_.size();
}
inline void VidInfoList::clear_vidinfo() {
  vidinfo_.Clear();
}
inline const ::liveprogrammgr_protos::VidInfoItem& VidInfoList::vidinfo(int index) const {
  return vidinfo_.Get(index);
}
inline ::liveprogrammgr_protos::VidInfoItem* VidInfoList::mutable_vidinfo(int index) {
  return vidinfo_.Mutable(index);
}
inline ::liveprogrammgr_protos::VidInfoItem* VidInfoList::add_vidinfo() {
  return vidinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoItem >&
VidInfoList::vidinfo() const {
  return vidinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoItem >*
VidInfoList::mutable_vidinfo() {
  return &vidinfo_;
}

// -------------------------------------------------------------------

// GetAllProgramVidInfoReq

// -------------------------------------------------------------------

// GetAllProgramVideInfoRsp

// required uint32 Result = 1;
inline bool GetAllProgramVideInfoRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAllProgramVideInfoRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAllProgramVideInfoRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAllProgramVideInfoRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GetAllProgramVideInfoRsp::result() const {
  return result_;
}
inline void GetAllProgramVideInfoRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .liveprogrammgr_protos.VidInfoList InfoList = 2;
inline int GetAllProgramVideInfoRsp::infolist_size() const {
  return infolist_.size();
}
inline void GetAllProgramVideInfoRsp::clear_infolist() {
  infolist_.Clear();
}
inline const ::liveprogrammgr_protos::VidInfoList& GetAllProgramVideInfoRsp::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::liveprogrammgr_protos::VidInfoList* GetAllProgramVideInfoRsp::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::liveprogrammgr_protos::VidInfoList* GetAllProgramVideInfoRsp::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoList >&
GetAllProgramVideInfoRsp::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::VidInfoList >*
GetAllProgramVideInfoRsp::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// DbProgramInfo

// required uint32 uiVideoId = 1;
inline bool DbProgramInfo::has_uivideoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbProgramInfo::set_has_uivideoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbProgramInfo::clear_has_uivideoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbProgramInfo::clear_uivideoid() {
  uivideoid_ = 0u;
  clear_has_uivideoid();
}
inline ::google::protobuf::uint32 DbProgramInfo::uivideoid() const {
  return uivideoid_;
}
inline void DbProgramInfo::set_uivideoid(::google::protobuf::uint32 value) {
  set_has_uivideoid();
  uivideoid_ = value;
}

// required uint32 uiRoomId = 2;
inline bool DbProgramInfo::has_uiroomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbProgramInfo::set_has_uiroomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbProgramInfo::clear_has_uiroomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbProgramInfo::clear_uiroomid() {
  uiroomid_ = 0u;
  clear_has_uiroomid();
}
inline ::google::protobuf::uint32 DbProgramInfo::uiroomid() const {
  return uiroomid_;
}
inline void DbProgramInfo::set_uiroomid(::google::protobuf::uint32 value) {
  set_has_uiroomid();
  uiroomid_ = value;
}

// required uint32 uiMuxSvrIp = 3;
inline bool DbProgramInfo::has_uimuxsvrip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbProgramInfo::set_has_uimuxsvrip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbProgramInfo::clear_has_uimuxsvrip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbProgramInfo::clear_uimuxsvrip() {
  uimuxsvrip_ = 0u;
  clear_has_uimuxsvrip();
}
inline ::google::protobuf::uint32 DbProgramInfo::uimuxsvrip() const {
  return uimuxsvrip_;
}
inline void DbProgramInfo::set_uimuxsvrip(::google::protobuf::uint32 value) {
  set_has_uimuxsvrip();
  uimuxsvrip_ = value;
}

// required uint32 uiStreamFormat = 4;
inline bool DbProgramInfo::has_uistreamformat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbProgramInfo::set_has_uistreamformat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbProgramInfo::clear_has_uistreamformat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbProgramInfo::clear_uistreamformat() {
  uistreamformat_ = 0u;
  clear_has_uistreamformat();
}
inline ::google::protobuf::uint32 DbProgramInfo::uistreamformat() const {
  return uistreamformat_;
}
inline void DbProgramInfo::set_uistreamformat(::google::protobuf::uint32 value) {
  set_has_uistreamformat();
  uistreamformat_ = value;
}

// optional uint32 uiBackFrameCnt = 5;
inline bool DbProgramInfo::has_uibackframecnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbProgramInfo::set_has_uibackframecnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbProgramInfo::clear_has_uibackframecnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbProgramInfo::clear_uibackframecnt() {
  uibackframecnt_ = 0u;
  clear_has_uibackframecnt();
}
inline ::google::protobuf::uint32 DbProgramInfo::uibackframecnt() const {
  return uibackframecnt_;
}
inline void DbProgramInfo::set_uibackframecnt(::google::protobuf::uint32 value) {
  set_has_uibackframecnt();
  uibackframecnt_ = value;
}

// optional uint32 uiBufferFrameCount = 6;
inline bool DbProgramInfo::has_uibufferframecount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbProgramInfo::set_has_uibufferframecount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbProgramInfo::clear_has_uibufferframecount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbProgramInfo::clear_uibufferframecount() {
  uibufferframecount_ = 0u;
  clear_has_uibufferframecount();
}
inline ::google::protobuf::uint32 DbProgramInfo::uibufferframecount() const {
  return uibufferframecount_;
}
inline void DbProgramInfo::set_uibufferframecount(::google::protobuf::uint32 value) {
  set_has_uibufferframecount();
  uibufferframecount_ = value;
}

// optional uint32 uiP2PBackTime = 7;
inline bool DbProgramInfo::has_uip2pbacktime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DbProgramInfo::set_has_uip2pbacktime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DbProgramInfo::clear_has_uip2pbacktime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DbProgramInfo::clear_uip2pbacktime() {
  uip2pbacktime_ = 0u;
  clear_has_uip2pbacktime();
}
inline ::google::protobuf::uint32 DbProgramInfo::uip2pbacktime() const {
  return uip2pbacktime_;
}
inline void DbProgramInfo::set_uip2pbacktime(::google::protobuf::uint32 value) {
  set_has_uip2pbacktime();
  uip2pbacktime_ = value;
}

// -------------------------------------------------------------------

// DbModuleInfo

// required bytes strModule = 1;
inline bool DbModuleInfo::has_strmodule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbModuleInfo::set_has_strmodule() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbModuleInfo::clear_has_strmodule() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbModuleInfo::clear_strmodule() {
  if (strmodule_ != &::google::protobuf::internal::kEmptyString) {
    strmodule_->clear();
  }
  clear_has_strmodule();
}
inline const ::std::string& DbModuleInfo::strmodule() const {
  return *strmodule_;
}
inline void DbModuleInfo::set_strmodule(const ::std::string& value) {
  set_has_strmodule();
  if (strmodule_ == &::google::protobuf::internal::kEmptyString) {
    strmodule_ = new ::std::string;
  }
  strmodule_->assign(value);
}
inline void DbModuleInfo::set_strmodule(const char* value) {
  set_has_strmodule();
  if (strmodule_ == &::google::protobuf::internal::kEmptyString) {
    strmodule_ = new ::std::string;
  }
  strmodule_->assign(value);
}
inline void DbModuleInfo::set_strmodule(const void* value, size_t size) {
  set_has_strmodule();
  if (strmodule_ == &::google::protobuf::internal::kEmptyString) {
    strmodule_ = new ::std::string;
  }
  strmodule_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DbModuleInfo::mutable_strmodule() {
  set_has_strmodule();
  if (strmodule_ == &::google::protobuf::internal::kEmptyString) {
    strmodule_ = new ::std::string;
  }
  return strmodule_;
}
inline ::std::string* DbModuleInfo::release_strmodule() {
  clear_has_strmodule();
  if (strmodule_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmodule_;
    strmodule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DbModuleInfo::set_allocated_strmodule(::std::string* strmodule) {
  if (strmodule_ != &::google::protobuf::internal::kEmptyString) {
    delete strmodule_;
  }
  if (strmodule) {
    set_has_strmodule();
    strmodule_ = strmodule;
  } else {
    clear_has_strmodule();
    strmodule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uiVideoId = 2;
inline bool DbModuleInfo::has_uivideoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbModuleInfo::set_has_uivideoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbModuleInfo::clear_has_uivideoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbModuleInfo::clear_uivideoid() {
  uivideoid_ = 0u;
  clear_has_uivideoid();
}
inline ::google::protobuf::uint32 DbModuleInfo::uivideoid() const {
  return uivideoid_;
}
inline void DbModuleInfo::set_uivideoid(::google::protobuf::uint32 value) {
  set_has_uivideoid();
  uivideoid_ = value;
}

// required uint32 uiAccessType = 3;
inline bool DbModuleInfo::has_uiaccesstype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbModuleInfo::set_has_uiaccesstype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbModuleInfo::clear_has_uiaccesstype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbModuleInfo::clear_uiaccesstype() {
  uiaccesstype_ = 0u;
  clear_has_uiaccesstype();
}
inline ::google::protobuf::uint32 DbModuleInfo::uiaccesstype() const {
  return uiaccesstype_;
}
inline void DbModuleInfo::set_uiaccesstype(::google::protobuf::uint32 value) {
  set_has_uiaccesstype();
  uiaccesstype_ = value;
}

// optional uint32 uiCdnType = 4;
inline bool DbModuleInfo::has_uicdntype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbModuleInfo::set_has_uicdntype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbModuleInfo::clear_has_uicdntype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbModuleInfo::clear_uicdntype() {
  uicdntype_ = 0u;
  clear_has_uicdntype();
}
inline ::google::protobuf::uint32 DbModuleInfo::uicdntype() const {
  return uicdntype_;
}
inline void DbModuleInfo::set_uicdntype(::google::protobuf::uint32 value) {
  set_has_uicdntype();
  uicdntype_ = value;
}

// optional uint32 uiMaxBandWidth = 5;
inline bool DbModuleInfo::has_uimaxbandwidth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbModuleInfo::set_has_uimaxbandwidth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbModuleInfo::clear_has_uimaxbandwidth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbModuleInfo::clear_uimaxbandwidth() {
  uimaxbandwidth_ = 0u;
  clear_has_uimaxbandwidth();
}
inline ::google::protobuf::uint32 DbModuleInfo::uimaxbandwidth() const {
  return uimaxbandwidth_;
}
inline void DbModuleInfo::set_uimaxbandwidth(::google::protobuf::uint32 value) {
  set_has_uimaxbandwidth();
  uimaxbandwidth_ = value;
}

// optional uint32 uiTotalBandWidth = 6;
inline bool DbModuleInfo::has_uitotalbandwidth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbModuleInfo::set_has_uitotalbandwidth() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbModuleInfo::clear_has_uitotalbandwidth() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbModuleInfo::clear_uitotalbandwidth() {
  uitotalbandwidth_ = 0u;
  clear_has_uitotalbandwidth();
}
inline ::google::protobuf::uint32 DbModuleInfo::uitotalbandwidth() const {
  return uitotalbandwidth_;
}
inline void DbModuleInfo::set_uitotalbandwidth(::google::protobuf::uint32 value) {
  set_has_uitotalbandwidth();
  uitotalbandwidth_ = value;
}

// -------------------------------------------------------------------

// AllDbProgramInfo

// required bytes strUpdateTime = 1;
inline bool AllDbProgramInfo::has_strupdatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllDbProgramInfo::set_has_strupdatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllDbProgramInfo::clear_has_strupdatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllDbProgramInfo::clear_strupdatetime() {
  if (strupdatetime_ != &::google::protobuf::internal::kEmptyString) {
    strupdatetime_->clear();
  }
  clear_has_strupdatetime();
}
inline const ::std::string& AllDbProgramInfo::strupdatetime() const {
  return *strupdatetime_;
}
inline void AllDbProgramInfo::set_strupdatetime(const ::std::string& value) {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  strupdatetime_->assign(value);
}
inline void AllDbProgramInfo::set_strupdatetime(const char* value) {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  strupdatetime_->assign(value);
}
inline void AllDbProgramInfo::set_strupdatetime(const void* value, size_t size) {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  strupdatetime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AllDbProgramInfo::mutable_strupdatetime() {
  set_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    strupdatetime_ = new ::std::string;
  }
  return strupdatetime_;
}
inline ::std::string* AllDbProgramInfo::release_strupdatetime() {
  clear_has_strupdatetime();
  if (strupdatetime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strupdatetime_;
    strupdatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AllDbProgramInfo::set_allocated_strupdatetime(::std::string* strupdatetime) {
  if (strupdatetime_ != &::google::protobuf::internal::kEmptyString) {
    delete strupdatetime_;
  }
  if (strupdatetime) {
    set_has_strupdatetime();
    strupdatetime_ = strupdatetime;
  } else {
    clear_has_strupdatetime();
    strupdatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .liveprogrammgr_protos.DbProgramInfo dbProgramInfoList = 2;
inline int AllDbProgramInfo::dbprograminfolist_size() const {
  return dbprograminfolist_.size();
}
inline void AllDbProgramInfo::clear_dbprograminfolist() {
  dbprograminfolist_.Clear();
}
inline const ::liveprogrammgr_protos::DbProgramInfo& AllDbProgramInfo::dbprograminfolist(int index) const {
  return dbprograminfolist_.Get(index);
}
inline ::liveprogrammgr_protos::DbProgramInfo* AllDbProgramInfo::mutable_dbprograminfolist(int index) {
  return dbprograminfolist_.Mutable(index);
}
inline ::liveprogrammgr_protos::DbProgramInfo* AllDbProgramInfo::add_dbprograminfolist() {
  return dbprograminfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbProgramInfo >&
AllDbProgramInfo::dbprograminfolist() const {
  return dbprograminfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbProgramInfo >*
AllDbProgramInfo::mutable_dbprograminfolist() {
  return &dbprograminfolist_;
}

// repeated .liveprogrammgr_protos.DbModuleInfo dbModuleInfoList = 3;
inline int AllDbProgramInfo::dbmoduleinfolist_size() const {
  return dbmoduleinfolist_.size();
}
inline void AllDbProgramInfo::clear_dbmoduleinfolist() {
  dbmoduleinfolist_.Clear();
}
inline const ::liveprogrammgr_protos::DbModuleInfo& AllDbProgramInfo::dbmoduleinfolist(int index) const {
  return dbmoduleinfolist_.Get(index);
}
inline ::liveprogrammgr_protos::DbModuleInfo* AllDbProgramInfo::mutable_dbmoduleinfolist(int index) {
  return dbmoduleinfolist_.Mutable(index);
}
inline ::liveprogrammgr_protos::DbModuleInfo* AllDbProgramInfo::add_dbmoduleinfolist() {
  return dbmoduleinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbModuleInfo >&
AllDbProgramInfo::dbmoduleinfolist() const {
  return dbmoduleinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::liveprogrammgr_protos::DbModuleInfo >*
AllDbProgramInfo::mutable_dbmoduleinfolist() {
  return &dbmoduleinfolist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace liveprogrammgr_protos

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::liveprogrammgr_protos::CMD>() {
  return ::liveprogrammgr_protos::CMD_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::liveprogrammgr_protos::SUBCMD>() {
  return ::liveprogrammgr_protos::SUBCMD_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::liveprogrammgr_protos::VIDEO_STATUS>() {
  return ::liveprogrammgr_protos::VIDEO_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::liveprogrammgr_protos::RESULT_CODE>() {
  return ::liveprogrammgr_protos::RESULT_CODE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::liveprogrammgr_protos::STREAM_FORMAT>() {
  return ::liveprogrammgr_protos::STREAM_FORMAT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LiveProgramMgr_2eproto__INCLUDED
