// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamesvr_protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_2eproto();
void protobuf_AssignDesc_game_2eproto();
void protobuf_ShutdownFile_game_2eproto();

class QtPushMessage;
class QtAckMessage;

enum QT_PUSH_CMD {
  QT_CMD_QT_PUSH = 26003,
  QT_CMD_QT_ACK = 26004
};
bool QT_PUSH_CMD_IsValid(int value);
const QT_PUSH_CMD QT_PUSH_CMD_MIN = QT_CMD_QT_PUSH;
const QT_PUSH_CMD QT_PUSH_CMD_MAX = QT_CMD_QT_ACK;
const int QT_PUSH_CMD_ARRAYSIZE = QT_PUSH_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* QT_PUSH_CMD_descriptor();
inline const ::std::string& QT_PUSH_CMD_Name(QT_PUSH_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    QT_PUSH_CMD_descriptor(), value);
}
inline bool QT_PUSH_CMD_Parse(
    const ::std::string& name, QT_PUSH_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QT_PUSH_CMD>(
    QT_PUSH_CMD_descriptor(), name, value);
}
enum DATA_TYPE {
  AUDIO_ONLY = 1,
  AUDIO_WITH_VIDEO = 2
};
bool DATA_TYPE_IsValid(int value);
const DATA_TYPE DATA_TYPE_MIN = AUDIO_ONLY;
const DATA_TYPE DATA_TYPE_MAX = AUDIO_WITH_VIDEO;
const int DATA_TYPE_ARRAYSIZE = DATA_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DATA_TYPE_descriptor();
inline const ::std::string& DATA_TYPE_Name(DATA_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DATA_TYPE_descriptor(), value);
}
inline bool DATA_TYPE_Parse(
    const ::std::string& name, DATA_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DATA_TYPE>(
    DATA_TYPE_descriptor(), name, value);
}
// ===================================================================

class QtPushMessage : public ::google::protobuf::Message {
 public:
  QtPushMessage();
  virtual ~QtPushMessage();

  QtPushMessage(const QtPushMessage& from);

  inline QtPushMessage& operator=(const QtPushMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QtPushMessage& default_instance();

  void Swap(QtPushMessage* other);

  // implements Message ----------------------------------------------

  QtPushMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QtPushMessage& from);
  void MergeFrom(const QtPushMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // required uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 videoid_type = 3;
  inline bool has_videoid_type() const;
  inline void clear_videoid_type();
  static const int kVideoidTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 videoid_type() const;
  inline void set_videoid_type(::google::protobuf::uint32 value);

  // required uint32 sessionid = 4;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);

  // required uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamesvr_protos.QtPushMessage)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_videoid_type();
  inline void clear_has_videoid_type();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 videoid_type_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_game_2eproto();
  friend void protobuf_AssignDesc_game_2eproto();
  friend void protobuf_ShutdownFile_game_2eproto();

  void InitAsDefaultInstance();
  static QtPushMessage* default_instance_;
};
// -------------------------------------------------------------------

class QtAckMessage : public ::google::protobuf::Message {
 public:
  QtAckMessage();
  virtual ~QtAckMessage();

  QtAckMessage(const QtAckMessage& from);

  inline QtAckMessage& operator=(const QtAckMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QtAckMessage& default_instance();

  void Swap(QtAckMessage* other);

  // implements Message ----------------------------------------------

  QtAckMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QtAckMessage& from);
  void MergeFrom(const QtAckMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // required uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 sessionid = 3;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamesvr_protos.QtAckMessage)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 sessionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_2eproto();
  friend void protobuf_AssignDesc_game_2eproto();
  friend void protobuf_ShutdownFile_game_2eproto();

  void InitAsDefaultInstance();
  static QtAckMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// QtPushMessage

// required uint32 uin = 1;
inline bool QtPushMessage::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QtPushMessage::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QtPushMessage::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QtPushMessage::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 QtPushMessage::uin() const {
  return uin_;
}
inline void QtPushMessage::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required uint32 room_id = 2;
inline bool QtPushMessage::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QtPushMessage::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QtPushMessage::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QtPushMessage::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 QtPushMessage::room_id() const {
  return room_id_;
}
inline void QtPushMessage::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 videoid_type = 3;
inline bool QtPushMessage::has_videoid_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QtPushMessage::set_has_videoid_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QtPushMessage::clear_has_videoid_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QtPushMessage::clear_videoid_type() {
  videoid_type_ = 0u;
  clear_has_videoid_type();
}
inline ::google::protobuf::uint32 QtPushMessage::videoid_type() const {
  return videoid_type_;
}
inline void QtPushMessage::set_videoid_type(::google::protobuf::uint32 value) {
  set_has_videoid_type();
  videoid_type_ = value;
}

// required uint32 sessionid = 4;
inline bool QtPushMessage::has_sessionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QtPushMessage::set_has_sessionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QtPushMessage::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QtPushMessage::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 QtPushMessage::sessionid() const {
  return sessionid_;
}
inline void QtPushMessage::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// required uint32 time = 5;
inline bool QtPushMessage::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QtPushMessage::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QtPushMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QtPushMessage::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 QtPushMessage::time() const {
  return time_;
}
inline void QtPushMessage::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// QtAckMessage

// required uint32 uin = 1;
inline bool QtAckMessage::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QtAckMessage::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QtAckMessage::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QtAckMessage::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 QtAckMessage::uin() const {
  return uin_;
}
inline void QtAckMessage::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required uint32 room_id = 2;
inline bool QtAckMessage::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QtAckMessage::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QtAckMessage::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QtAckMessage::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 QtAckMessage::room_id() const {
  return room_id_;
}
inline void QtAckMessage::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 sessionid = 3;
inline bool QtAckMessage::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QtAckMessage::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QtAckMessage::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QtAckMessage::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 QtAckMessage::sessionid() const {
  return sessionid_;
}
inline void QtAckMessage::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gamesvr_protos

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gamesvr_protos::QT_PUSH_CMD>() {
  return ::gamesvr_protos::QT_PUSH_CMD_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gamesvr_protos::DATA_TYPE>() {
  return ::gamesvr_protos::DATA_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
